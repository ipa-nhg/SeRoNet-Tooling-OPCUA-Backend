#!/bin/sh
#--------------------------------------------------------------------------
# Code generated by the SmartSoft MDSD Toolchain
# The SmartSoft Toolchain has been developed by:
#  
# Service Robotics Research Center
# University of Applied Sciences Ulm
# Prittwitzstr. 10
# 89075 Ulm (Germany)
#
# Information about the SmartSoft MDSD Toolchain is available at:
# www.servicerobotik-ulm.de
#
# Please do not modify this file. It will be re-generated
# running the code generator.
#--------------------------------------------------------------------------
#
# start script for device LocalPC


PID_XTERM="/var/tmp/start-LocalPC-xterms.pid"
PID_COMPONENT_NAMES="/var/tmp/start-LocalPC-component-names.pid"

SCRIPT_DIR=`pwd`
SCRIPT_NAME=start-LocalPC.sh

export SMART_ROOT_DEPLOYMENT=$SCRIPT_DIR

#######
## case
case "$1" in
	    
	    
#########################################################################################
## start
start)

true > $PID_XTERM
true > $PID_COMPONENT_NAMES

echo "Starting scenario..."
date -R

# CONFIGURE NAMING SERVICE
	export SMART_NS_ADDR=localhost:20002

echo "Stopping Naming Service..."
killall AceSmartSoftNamingService &
test -e SMART_NAMES && rm -f SMART_NAMES
sleep 1
echo Starting Naming Service...
rm -f AceSmartSoftNamingService.log
xterm -l -lf AceSmartSoftNamingService.log -title "AceSmartSoftNamingService" -hold -e "export LD_LIBRARY_PATH=$SCRIPT_DIR:\$LD_LIBRARY_PATH; ./NamingService/AceSmartSoftNamingService --ns-port 20002 --ns-dir ./ --ns-file SMART_NAMES --filename=ns_config.ini; echo; echo; echo 'Naming Service exited'; /bin/bash" &
echo $! >> $PID_XTERM
echo AceSmartSoftNamingService >> $PID_COMPONENT_NAMES
sleep 1

## start components
export SMART_IP=localhost
echo "starting components..."

# Component instance ComponentJoystickTrafficLights
echo
echo "############################################"
echo "## Starting component instance ComponentJoystickTrafficLights"
cd $SCRIPT_DIR
echo "executing startstop-hooks-ComponentJoystickTrafficLights.sh (errors might be ignored)"
bash startstop-hooks-ComponentJoystickTrafficLights.sh pre-start
cd $SCRIPT_DIR/ComponentJoystickTrafficLights_data
rm -f "../ComponentJoystickTrafficLights.log"
xterm -l -lf "../ComponentJoystickTrafficLights.log" -title "ComponentJoystickTrafficLights@LocalPC Component" -hold -e "export LD_LIBRARY_PATH=$SCRIPT_DIR:\$LD_LIBRARY_PATH; $SCRIPT_DIR/ComponentJoystickTrafficLights -filename=$SCRIPT_DIR/ComponentJoystickTrafficLights.ini; echo; echo; echo 'ComponentJoystickTrafficLights exited.'; echo; /bin/bash --login" &
echo $! >> $PID_XTERM
echo ComponentJoystickTrafficLights >> $PID_COMPONENT_NAMES
cd $SCRIPT_DIR
bash startstop-hooks-ComponentJoystickTrafficLights.sh post-start
echo -e "\n\n\n"

# Component instance ComponentKeyboardJoystick
echo
echo "############################################"
echo "## Starting component instance ComponentKeyboardJoystick"
cd $SCRIPT_DIR
echo "executing startstop-hooks-ComponentKeyboardJoystick.sh (errors might be ignored)"
bash startstop-hooks-ComponentKeyboardJoystick.sh pre-start
cd $SCRIPT_DIR/ComponentKeyboardJoystick_data
rm -f "../ComponentKeyboardJoystick.log"
xterm -l -lf "../ComponentKeyboardJoystick.log" -title "ComponentKeyboardJoystick@LocalPC Component" -hold -e "export LD_LIBRARY_PATH=$SCRIPT_DIR:\$LD_LIBRARY_PATH; $SCRIPT_DIR/ComponentKeyboardJoystick -filename=$SCRIPT_DIR/ComponentKeyboardJoystick.ini; echo; echo; echo 'ComponentKeyboardJoystick exited.'; echo; /bin/bash --login" &
echo $! >> $PID_XTERM
echo ComponentKeyboardJoystick >> $PID_COMPONENT_NAMES
cd $SCRIPT_DIR
bash startstop-hooks-ComponentKeyboardJoystick.sh post-start
echo -e "\n\n\n"


cd $SCRIPT_DIR

;; ## start


#########################################################################################
## stop
stop)
cd $SCRIPT_DIR
bash startstop-hooks-ComponentJoystickTrafficLights.sh pre-stop
bash startstop-hooks-ComponentKeyboardJoystick.sh pre-stop

echo "kill all components..."

for I in `cat $PID_COMPONENT_NAMES`; do
        echo $I
        killall -2 $I
done
rm $PID_COMPONENT_NAMES

sleep 3

for I in `cat $PID_XTERM`; do
        echo $I
        kill -2 $I
done
rm $PID_XTERM



test -e SMART_NAMES && rm -f SMART_NAMES

bash startstop-hooks-ComponentJoystickTrafficLights.sh post-stop
bash startstop-hooks-ComponentKeyboardJoystick.sh post-stop


# collect log files
ls -l *.log && (
	pwd
	tar czvf LocalPC-logs-$(date +"%Y%m%d%H%M").tar.gz *.log
	rm *.log
)

;; ## stop



#########################################################################################
## menu

menu-start)
	bash $SCRIPT_NAME start
	cd $SCRIPT_DIR
	bash $SCRIPT_NAME menu
;;

menu-stop)
	bash $SCRIPT_NAME stop
	cd $SCRIPT_DIR
	bash $SCRIPT_NAME menu
;;

menu-tile)
	bash tiler.sh
	cd $SCRIPT_DIR
	bash $SCRIPT_NAME menu
;;

menu)

#wmctrl -r :ACTIVE: -b add,above
ACTION=$(whiptail --title "Scenario Control" --menu "Choose an option" 12 35 4 "menu-start" "Start Scenario" "menu-stop" "Stop Scenario" "menu-tile" "Arrange terminals" "quit" "Quit to console" 3>&1 1>&2 2>&3)
#whiptail --title "Scenario Control" --menu "Choose an option" 10 30 3 "menu-start" "Start Scenario" "menu-stop" "Stop Scenario" "quit" "Quit to console" 2>/tmp/whip
#ACTION=`cat /tmp/whip`

cd $SCRIPT_DIR
bash $SCRIPT_NAME $ACTION

;; ## menu

quit)
	bash $SCRIPT_NAME stop
;;
		
		
#########################################################################################
## default
*)
echo "No such parameter: $1"
echo "Usage: $SCRIPT_NAME {start|stop|menu-start|menu-stop|menu}"
exit 1
;;

esac
