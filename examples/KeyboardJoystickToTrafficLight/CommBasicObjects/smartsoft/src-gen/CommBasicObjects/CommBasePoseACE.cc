//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#include "CommBasicObjects/CommBasePoseACE.hh"
#include <ace/SString.h>
#include "CommBasicObjects/CommPose3dACE.hh"
#include "CommBasicObjects/CommTimeStampACE.hh"

// serialization operator for element CommBasePose
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommBasicObjectsIDL::CommBasePose &data)
{
	ACE_CDR::Boolean good_bit = true;
	// serialize list-element covInvalid
	good_bit = good_bit && cdr.write_boolean(data.covInvalid);
	// serialize list-element covMatrix
	good_bit = good_bit && cdr << ACE_Utils::truncate_cast<ACE_CDR::ULong>(data.covMatrix.size());
	good_bit = good_bit && cdr.write_double_array(data.covMatrix.data(), data.covMatrix.size());
	// serialize list-element updateCount
	good_bit = good_bit && cdr.write_ulong(data.updateCount);
	// serialize list-element pose3D
	good_bit = good_bit && cdr << data.pose3D;
	// serialize list-element timeStamp
	good_bit = good_bit && cdr << data.timeStamp;
	
	return good_bit;
}

// de-serialization operator for element CommBasePose
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommBasicObjectsIDL::CommBasePose &data)
{
	ACE_CDR::Boolean good_bit = true;
	// deserialize type element covInvalid
	good_bit = good_bit && cdr.read_boolean(data.covInvalid);
	// deserialize list-type element covMatrix
	ACE_CDR::ULong data_covMatrixNbr;
	good_bit = good_bit && cdr >> data_covMatrixNbr;
	data.covMatrix.resize(data_covMatrixNbr);
	good_bit = good_bit && cdr.read_double_array(data.covMatrix.data(), data_covMatrixNbr);
	// deserialize type element updateCount
	good_bit = good_bit && cdr.read_ulong(data.updateCount);
	// deserialize type element pose3D
	good_bit = good_bit && cdr >> data.pose3D;
	// deserialize type element timeStamp
	good_bit = good_bit && cdr >> data.timeStamp;
	
	return good_bit;
}

// serialization operator for CommunicationObject CommBasePose
ACE_CDR::Boolean operator<<(ACE_OutputCDR &cdr, const CommBasicObjects::CommBasePose &obj)
{
	return cdr << obj.get();
}

// de-serialization operator for CommunicationObject CommBasePose
ACE_CDR::Boolean operator>>(ACE_InputCDR &cdr, CommBasicObjects::CommBasePose &obj)
{
	return cdr >> obj.set();
}
