//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef COMMBASICOBJECTS_COMMORIENTATION3D_CORE_H_
#define COMMBASICOBJECTS_COMMORIENTATION3D_CORE_H_

#include "CommBasicObjects/CommOrientation3dData.hh"

#include <iostream>
#include <string>
#include <list>

namespace CommBasicObjects {
	
class CommOrientation3dCore {
protected:
	// data structure
	CommBasicObjectsIDL::CommOrientation3d idl_CommOrientation3d;
	
public:
	// give a publicly accessible type-name for the template parameter IDL
	typedef CommBasicObjectsIDL::CommOrientation3d DATATYPE;
	
	#ifdef ENABLE_HASH
		static size_t generateDataHash(const DATATYPE &);
	#endif
	
	static const char* getCompiledHash();
	static void getAllHashValues(std::list<std::string> &hashes);
	static void checkAllHashValues(std::list<std::string> &hashes);
	
	// default constructors
	CommOrientation3dCore();
	CommOrientation3dCore(const DATATYPE &data);
	// default destructor
	virtual ~CommOrientation3dCore();
	
	const DATATYPE& get() const { return idl_CommOrientation3d; }
	operator const DATATYPE&() const { return idl_CommOrientation3d; }
	DATATYPE& set() { return idl_CommOrientation3d; }

	static inline std::string identifier(void) { return "CommBasicObjects::CommOrientation3d"; }
	
	// helper method to easily implement output stream in derived classes
	void to_ostream(std::ostream &os = std::cout) const;
	
	// convert to xml stream
	void to_xml(std::ostream &os, const std::string &indent = "") const;
	
	// restore from xml stream
	void from_xml(std::istream &is);
	
	// User Interface
	
	// getter and setter for element Azimuth
	inline double getAzimuth() const { return idl_CommOrientation3d.azimuth; }
	inline CommOrientation3dCore& setAzimuth(const double &azimuth) { idl_CommOrientation3d.azimuth = azimuth; return *this; }
	
	// getter and setter for element Elevation
	inline double getElevation() const { return idl_CommOrientation3d.elevation; }
	inline CommOrientation3dCore& setElevation(const double &elevation) { idl_CommOrientation3d.elevation = elevation; return *this; }
	
	// getter and setter for element Roll
	inline double getRoll() const { return idl_CommOrientation3d.roll; }
	inline CommOrientation3dCore& setRoll(const double &roll) { idl_CommOrientation3d.roll = roll; return *this; }
};

} /* namespace CommBasicObjects */
#endif /* COMMBASICOBJECTS_COMMORIENTATION3D_CORE_H_ */
