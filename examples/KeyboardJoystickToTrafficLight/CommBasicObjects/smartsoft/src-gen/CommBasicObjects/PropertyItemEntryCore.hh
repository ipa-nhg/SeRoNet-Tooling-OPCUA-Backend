//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Service Robotics Research Center
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// Please do not modify this file. It will be re-generated
// running the code generator.
//--------------------------------------------------------------------------
#ifndef COMMBASICOBJECTS_PROPERTYITEMENTRY_CORE_H_
#define COMMBASICOBJECTS_PROPERTYITEMENTRY_CORE_H_

#include "CommBasicObjects/PropertyItemEntryData.hh"

#include <iostream>
#include <string>
#include <list>

namespace CommBasicObjects {
	
class PropertyItemEntryCore {
protected:
	// data structure
	CommBasicObjectsIDL::PropertyItemEntry idl_PropertyItemEntry;
	
public:
	// give a publicly accessible type-name for the template parameter IDL
	typedef CommBasicObjectsIDL::PropertyItemEntry DATATYPE;
	
	#ifdef ENABLE_HASH
		static size_t generateDataHash(const DATATYPE &);
	#endif
	
	static const char* getCompiledHash();
	static void getAllHashValues(std::list<std::string> &hashes);
	static void checkAllHashValues(std::list<std::string> &hashes);
	
	// default constructors
	PropertyItemEntryCore();
	PropertyItemEntryCore(const DATATYPE &data);
	// default destructor
	virtual ~PropertyItemEntryCore();
	
	const DATATYPE& get() const { return idl_PropertyItemEntry; }
	operator const DATATYPE&() const { return idl_PropertyItemEntry; }
	DATATYPE& set() { return idl_PropertyItemEntry; }

	static inline std::string identifier(void) { return "CommBasicObjects::PropertyItemEntry"; }
	
	// helper method to easily implement output stream in derived classes
	void to_ostream(std::ostream &os = std::cout) const;
	
	// convert to xml stream
	void to_xml(std::ostream &os, const std::string &indent = "") const;
	
	// restore from xml stream
	void from_xml(std::istream &is);
	
	// User Interface
	
	// getter and setter for element Key
	inline std::string getKey() const { return idl_PropertyItemEntry.key; }
	inline PropertyItemEntryCore& setKey(const std::string &key) { idl_PropertyItemEntry.key = key; return *this; }
	
	// getter and setter for element Value
	inline std::string getValue() const { return idl_PropertyItemEntry.value; }
	inline PropertyItemEntryCore& setValue(const std::string &value) { idl_PropertyItemEntry.value = value; return *this; }
	
	// getter and setter for element Parent
	inline unsigned int getParent() const { return idl_PropertyItemEntry.parent; }
	inline PropertyItemEntryCore& setParent(const unsigned int &parent) { idl_PropertyItemEntry.parent = parent; return *this; }
};

} /* namespace CommBasicObjects */
#endif /* COMMBASICOBJECTS_PROPERTYITEMENTRY_CORE_H_ */
