//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

// --------------------------------------------------------------------------
//
//  Copyright (C) 2005 Pablo d'Angelo, Boris Kluge
//
//        schlegel@hs-ulm.de
//
//        Prof. Dr. Christian Schlegel
//        University of Applied Sciences
//        Prittwitzstr. 10
//        D-89075 Ulm
//        Germany
//
//  This file is part of the "SmartSoft Communication Library".
//  It provides standardized patterns for communication between
//  different components.
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU Lesser General Public
//  License as published by the Free Software Foundation; either
//  version 2.1 of the License, or (at your option) any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  Lesser General Public License for more details.
//
//  You should have received a copy of the GNU Lesser General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
// --------------------------------------------------------------------------


#ifndef COMMBASICOBJECTS_COMMPROPERTYSET_H_
#define COMMBASICOBJECTS_COMMPROPERTYSET_H_

#include "CommBasicObjects/CommPropertySetCore.hh"

#include "smartPropertySet.hh"

namespace CommBasicObjects {
		
class CommPropertySet : public Smart::PropertySet, public CommPropertySetCore {
	private:
		void toIdlType();
		void fromIdlType();

	public:
		// default constructors
		CommPropertySet();
		CommPropertySet(const std::vector<CommBasicObjects::PropertySetEntry> &sets, const std::vector<CommBasicObjects::PropertyItemEntry> &items);
		CommPropertySet(const DATATYPE &commPropertySet);
		virtual ~CommPropertySet();
		
		// it is necessary to overload the following methods from the base class, because there are two
		// storages for the property set, one is inherited from the base class Smart::PropertySet
		// and another is located in the CommPropertySetCore base class. During regular usage,
		// the storage in the Smart::PropertySet is used. However, if the Communication object
		// gets copied or is transfered into/from a platform independent representation then the
		// content from Smart::PropertySet is translated using the methods toIdlType/fromIdlType
		// (see the implementation of the following two methods and the operator)
		// Even so this is not very efficient because of the additional copying and the additional memory,
		// it is the best compromise without breaking the structures of CommPropertySetCore. Also,
		// the property set typically is not used at very high communication frequencies.
		const DATATYPE& get() const;
		operator const DATATYPE&() const;
		DATATYPE& set();

		//
		// feel free to add customized methods here
		//

		  CommPropertySet(const PropertySet &source)
		  :   PropertySet(source)
		  {
		  }

		  inline CommPropertySet &operator=(const PropertySet &source)
		  {
			PropertySet::operator=(source);
		    return *this;
		  }

		  template<class Value>
		  inline void set(const Key &key, const Value &value)
		  {
			  PropertySet::set(key,value);
		  }

};

inline std::ostream &operator<<(std::ostream &os, const CommPropertySet &co)
{
	co.to_ostream(os);
	return os;
}
	
} /* namespace CommBasicObjects */
#endif /* COMMBASICOBJECTS_COMMPROPERTYSET_H_ */
