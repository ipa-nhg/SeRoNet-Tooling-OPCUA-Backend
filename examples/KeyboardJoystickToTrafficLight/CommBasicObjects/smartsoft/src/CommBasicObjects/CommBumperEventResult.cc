//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

#include "CommBasicObjects/CommBumperEventResult.hh"

#include <cstring>

using namespace CommBasicObjects;

CommBumperEventResult::CommBumperEventResult()
:	CommBumperEventResultCore()
{  }


/**
 * Constructor to set all values.
 * NOTE that you have to keep this constructor consistent with the model!
 * Use  at your own choice.
 *
 * The preferred way to set values for initialization is:
 *      CommRepository::MyCommObject obj;
 *      obj.setX(1).setY(2).setZ(3)...;
CommBumperEventResult::CommBumperEventResult(const CommBasicObjects::BumperEventType &state)
:	CommBumperEventResultCore() // base constructor sets default values as defined in the model
{
	setState(state);
}
 */

CommBumperEventResult::CommBumperEventResult(const CommBumperEventResultCore &commBumperEventResult)
:	CommBumperEventResultCore(commBumperEventResult)
{  }

CommBumperEventResult::CommBumperEventResult(const DATATYPE &commBumperEventResult)
:	CommBumperEventResultCore(commBumperEventResult)
{  }

CommBumperEventResult::~CommBumperEventResult()
{  }

void CommBumperEventResult::get(char* r)const
{
  switch(idl_CommBumperEventResult.state) {
    case BumperEventType::BUMPER_UNKNOWN:
      strcpy(r,"(unknown)");
      break;
    case BumperEventType::BUMPER_PRESSED:
      strcpy(r,"(pressed)");
      break;
    case BumperEventType::BUMPER_NOT_PRESSED:
      strcpy(r,"(notpressed)");
      break;
    default:
      strcpy(r,"(error)");
      break;
  }
}
