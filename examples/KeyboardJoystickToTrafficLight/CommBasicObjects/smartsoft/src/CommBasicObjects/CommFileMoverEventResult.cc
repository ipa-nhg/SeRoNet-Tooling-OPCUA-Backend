//--------------------------------------------------------------------------
// Code generated by the SmartSoft MDSD Toolchain
// The SmartSoft Toolchain has been developed by:
//  
// Christian Schlegel (schlegel@hs-ulm.de)
// University of Applied Sciences Ulm
// Prittwitzstr. 10
// 89075 Ulm (Germany)
//
// Information about the SmartSoft MDSD Toolchain is available at:
// www.servicerobotik-ulm.de
//
// This file is generated once. Modify this file to your needs. 
// If you want the toolchain to re-generate this file, please 
// delete it before running the code generator.
//--------------------------------------------------------------------------

#include "CommBasicObjects/CommFileMoverEventResult.hh"

#include <cstring>

using namespace CommBasicObjects;

CommFileMoverEventResult::CommFileMoverEventResult()
:	CommFileMoverEventResultCore()
{  }


/**
 * Constructor to set all values.
 * NOTE that you have to keep this constructor consistent with the model!
 * Use  at your own choice.
 *
 * The preferred way to set values for initialization is:
 *      CommRepository::MyCommObject obj;
 *      obj.setX(1).setY(2).setZ(3)...;
CommFileMoverEventResult::CommFileMoverEventResult(const CommBasicObjects::FileMoverEventType &state)
:	CommFileMoverEventResultCore() // base constructor sets default values as defined in the model
{
	setState(state);
}
 */

void CommFileMoverEventResult::get(char* r)const
{
  std::stringstream tmp;
  switch(idl_CommFileMoverEventResult.state) {
    case FileMoverEventType::TYPE_FILE_UNKNOWN:
      strcpy(r,"(unknown)");
      break;
    case FileMoverEventType::TYPE_FILE_ERROR:
      strcpy(r,"(error)");
      break;
    case FileMoverEventType::TYPE_FILE_SUCCESS:
      strcpy(r,"(success)");
	  break;
    default:
      strcpy(r,"(unkownerror)");
      break;
  }
}

CommFileMoverEventResult::CommFileMoverEventResult(const CommFileMoverEventResultCore &commFileMoverEventResult)
:	CommFileMoverEventResultCore(commFileMoverEventResult)
{  }

CommFileMoverEventResult::CommFileMoverEventResult(const DATATYPE &commFileMoverEventResult)
:	CommFileMoverEventResultCore(commFileMoverEventResult)
{  }

CommFileMoverEventResult::~CommFileMoverEventResult()
{  }
